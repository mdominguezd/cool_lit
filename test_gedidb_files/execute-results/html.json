{
  "hash": "7fe76b87939633fe8b9de001933b60d5",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Some tests with gediDB\"\nexecute: \n  enabled: true\n---\n\n::: {#cell-1 .cell execution_count=1}\n``` {.python .cell-code}\nimport geopandas as gpd\nimport gedidb as gdb\nimport plotly.figure_factory as ff\nimport plotly.express as px\nimport plotly.io as pio\nimport numpy as np\nimport os\n\n# Instantiate the GEDIProvider\nprovider = gdb.GEDIProvider(\n    storage_type='s3',\n    s3_bucket=\"dog.gedidb.gedi-l2-l4-v002\",\n    url=\"https://s3.gfz-potsdam.de\"\n)\n\n# Load region of interest (ROI)\nregion_of_interest = gpd.read_file('MougueirasFire.geojson')\n\n# Define variables to query and quality filters\nvars_selected = [\"agbd\", 'wsci']\n\n# Query data\ngedi_data = provider.get_data(\n    variables=vars_selected,\n    query_type=\"bounding_box\",\n    geometry=region_of_interest,\n    start_time=\"2019-09-26\",\n    end_time=\"2020-09-27\",\n    return_type='dataframe'\n)\n\ngdf = gpd.GeoDataFrame(gedi_data, geometry=gpd.points_from_xy(x= gedi_data['longitude'], y = gedi_data['latitude']))\ngdf.crs = 4326\n\ngedi_ba = gpd.sjoin(gdf, region_of_interest, how='inner')\n```\n:::\n\n\n::: {#cell-2 .cell execution_count=2}\n``` {.python .cell-code}\nos.environ['MAPBOX_TOKEN'] = 'pk.eyJ1IjoibWRvbWluZ3VlemQiLCJhIjoiY2xodGY5NWtvMDVidDNwcGJyNGFhZGV5byJ9.8vuMo0BXgq9605Bq8wmwCg'\n```\n:::\n\n\n::: {#cell-3 .cell title='GDP and Life Expectancy' execution_count=3}\n``` {.python .cell-code}\npio.renderers.default = \"iframe\"\n\nmb_token = os.environ.get('MAPBOX_TOKEN')\n\npx.set_mapbox_access_token(mb_token)\n\nfig = ff.create_hexbin_mapbox(\n    data_frame=gedi_ba, lat=\"latitude\", \n    lon=\"longitude\", color = 'agbd',\n    color_continuous_scale = 'Greens', agg_func=np.mean,\n    nx_hexagon=15, opacity=0.9, labels={\"color\": \"AGBD [Mg/ha]\"},\n)\nfig.update_layout(margin=dict(b=0, t=0, l=0, r=0))\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<iframe\n    scrolling=\"no\"\n    width=\"100%\"\n    height=\"545px\"\n    src=\"iframe_figures/figure_3.html\"\n    frameborder=\"0\"\n    allowfullscreen\n></iframe>\n```\n:::\n:::\n\n\n\n",
    "supporting": [
      "test_gedidb_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}